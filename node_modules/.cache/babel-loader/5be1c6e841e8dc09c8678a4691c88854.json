{"ast":null,"code":"var _jsxFileName = \"/Users/gurvinderdehl/Documents/GitHub/User-Directory/src/components/UserTable/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport API from \"../../Utils/API\";\nimport User from \"../User\";\nimport Search from \"../Search\";\nimport Column from \"../Column\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserTable() {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [users, setUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  function loadUsers() {\n    API.getRandomUsers().then(users => {\n      setUsers(users);\n      setUser(user);\n    }).catch(err => console.log(err));\n  }\n\n  function searchResults() {\n    console.log('Searching for: ' + search);\n    const searchUsers = users.filter(user => {\n      if (user.firstName.toLowerCase() === search) {\n        return search;\n      }\n\n      if (user.lastName.toLowerCase() === search) {\n        return search;\n      }\n\n      if (user.title.toLowerCase() === search) {\n        return search;\n      }\n    });\n    setUsers(searchUsers);\n  }\n\n  function handleInputChange(event) {\n    setSearch(event.target.value);\n  }\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    searchResults(search);\n  }\n\n  function sortAlphabetical() {\n    const sorted = users.sort((result1, result2) => {\n      if (result1.firstName < result2.firstName) {\n        return -1;\n      }\n\n      if (result1.firstName > result2.firstName) {\n        return 1;\n      }\n\n      return 0;\n    });\n    setUsers([...sorted]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      value: search,\n      handleInputChange: handleInputChange,\n      handleFormSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      size: \"md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), [...users].map(user => /*#__PURE__*/_jsxDEV(User, {\n          title: user.title,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          email: user.email,\n          phone: user.phone,\n          location: user.location,\n          photo: user.photo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserTable, \"GMaasUZDuZN9epwI+m6yid+p8ck=\");\n\n_c = UserTable;\nexport default UserTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"sources":["/Users/gurvinderdehl/Documents/GitHub/User-Directory/src/components/UserTable/index.js"],"names":["React","useState","useEffect","API","User","Search","Column","UserTable","user","setUser","users","setUsers","search","setSearch","loadUsers","getRandomUsers","then","catch","err","console","log","searchResults","searchUsers","filter","firstName","toLowerCase","lastName","title","handleInputChange","event","target","value","handleFormSubmit","preventDefault","sortAlphabetical","sorted","sort","result1","result2","map","email","phone","location","photo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport API from \"../../Utils/API\";\nimport User from \"../User\";\nimport Search from \"../Search\"\nimport Column from \"../Column\";\n\n\nfunction UserTable() {\n    const [user, setUser] = useState({});\n    const [users, setUsers] = useState([]);\n    const [search, setSearch] = useState(\"\");\n\n    useEffect(() => {\n        loadUsers();\n    }, []);\n\n    function loadUsers() {\n        API.getRandomUsers()\n            .then(users => {\n                setUsers(users);\n                setUser(user);\n            })\n            .catch(err => console.log(err));\n    }\n\n    function searchResults() {\n        console.log('Searching for: ' + search);\n        const searchUsers = users.filter(user => {\n            if (user.firstName.toLowerCase() === search) {\n                return search;\n            }\n            if (user.lastName.toLowerCase() === search) {\n                return search;\n            }\n            if (user.title.toLowerCase() === search) {\n                return search;\n            }\n        });\n        setUsers(searchUsers);\n    }\n\n    function handleInputChange(event) {\n        setSearch(event.target.value);\n\n    }\n\n    function handleFormSubmit(event) {\n        event.preventDefault();\n        searchResults(search);\n\n    }\n\n    function sortAlphabetical() {\n        const sorted = users.sort((result1, result2) => {\n            if (result1.firstName < result2.firstName) {\n                return -1;\n            }\n            if (result1.firstName > result2.firstName) {\n                return 1;\n            }\n            return 0;\n        });\n\n        setUsers([...sorted]);\n    }\n\n    return (\n        <div>\n\n            <Search value={search}\n                handleInputChange={handleInputChange}\n                handleFormSubmit={handleFormSubmit} />\n\n            <Column \n            size=\"md-12\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Photo</th>\n                            <th>Full Name</th>\n                            <th>Email</th>\n                            <th>Location</th>\n                            <th>Phone</th>\n                        </tr>\n                    </thead>\n                    {[...users].map(user => (\n                        <User\n                            title={user.title}\n                            firstName={user.firstName}\n                            lastName={user.lastName}\n                            email={user.email}\n                            phone={user.phone}\n                            location={user.location}\n                            photo={user.photo}\n                        />\n                    ))}\n                </table>\n            </Column>\n\n        </div>\n    )\n\n}\n\n\nexport default UserTable;"]},"metadata":{},"sourceType":"module"}